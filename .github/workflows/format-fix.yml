name: Auto-fix Code Formatting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  format:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    # Generate GitHub App token if App credentials are available
    - name: Generate GitHub App Token
      id: app-token
      if: ${{ secrets.APP_ID && secrets.APP_PRIVATE_KEY && secrets.APP_INSTALLATION_ID }}
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        installation-id: ${{ secrets.APP_INSTALLATION_ID }}

    # Checkout with GitHub App token (preferred), PAT (fallback), or GITHUB_TOKEN (last resort)
    - uses: actions/checkout@v4
      with:
        token: ${{ steps.app-token.outputs.token || secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install formatting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort

    - name: Format code with black
      run: black lzaas/

    - name: Sort imports with isort
      run: isort lzaas/

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-fix code formatting [skip ci]"
        git push
